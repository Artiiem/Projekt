---
title: "Projekt analizy danych z Udemy"
author: "Artur Kidaj, Kamil Kopiński"
format:
  html:
    warning: false
    message: false
    echo: false
    self-contained: true
    toc: true
    toc_float:
      toc_positon: "right"
      smooth_scroll: true
editor: visual
editor_options: 
  chunk_output_type: inline
---

```{=html}
<!--zrobienia w projekcie:

Treść:

-   Ładny opis wyników także (\*) - Kamil
-   zrobić las losowy (\*) - Kamil
-   zrobić drzewo losowe, aby porównać z lasem (\*) - Kamil
-   może jakiś model logitowy/probitowy
-   może analia wariancji?
-   opisać model (\*) - Artur
-   praca nad modelem (\*) - Artur
-   zrobić inne macierze korelacji
-   zrobić więcej modeli
-   dodać do obecnego modelu zmienne jakościowe.
-   dodanie opisu zbioru danych
-   dodanie celi/założeń
-   Powiedzenie czegoś o wartościach odstających, że są, ale nie warto ich usuwać, bo to są prawdziwe wartości z kursów

Wizualia:

\- Lepsza wizualizacja i jej opis (\*) - Kamil

\- ładna wizualizacja naszych wyników, np wyniki testów w ładnej tabeli

\- stworzyć jednorodny styl tabeli (rozkład,styl tekstu i obramowań,kolory, itp.).

\- przenieść wykresy do plotly::ggplotly().-->
```
```{r}
library(openxlsx)
library(knitr)
library(gt)
library(tidyverse)
library(PerformanceAnalytics)
library(gtsummary)
library(lmtest)
library(nortest)
library(ivreg)
library(caret)
library(reshape2)
library(rstatix)
library(interactions)
library(plotly)
library(factoextra)
```

## Przedstawienie danych

Zbiór danych przedstawia szeroki zakres informacji dotyczących kursów oferowanych przez platformę e-learningową Udemy. Zawiera on dane takie jak tytuł kursu, jego cenę, liczbę subskrybentów, poziom trudności, datę i godzinę publikacji, jak również główną tematykę każdego kursu. Dzięki temu zapewnia kompleksowy przegląd oferty edukacyjnej dostępnej na Udemy, umożliwiając analizę zarówno poszczególnych kursów, jak i ogólnych trendów w zakresie edukacji online.

Udemy to masowa platforma kursów online (MOOC), która oferuje zarówno darmowe, jak i płatne kursy. Każdy może stworzyć kurs, co jest modelem biznesowym, który pozwolił Udemy na posiadanie setek tysięcy kursów.

```{r}
data <- read.csv("udemy_courses.csv")

# usunięcie bezużytecznych kolumn
data <- data[,-3]  
data <- data[,-1]
```

Oto pierwsze pięć wierszy z tabeli.

```{r}
data = data %>% arrange(desc(num_subscribers))
gt(head(data,5)) %>% 
    cols_width(course_title ~ px(190),
               num_subscribers ~ px(180),
               num_reviews ~ px(150),
               num_lectures ~ px(150),
               level ~ px(100),
               content_duration ~ px(200),
               published_timestamp ~px(200),
               subject ~ px(150),
               everything() ~ px(70),
               ) %>% 
  tab_style(
    style = cell_text(
      weight = 'bold',
      transform = 'uppercase'
    ),
    locations = cells_column_labels()
  ) %>% 
  tab_style(
    style = cell_text(
      weight = 'bold',
      style = 'italic'
    ),
    locations = cells_body(columns = num_subscribers)
  ) %>% 
  tab_style(
    style = cell_text(
      style = 'italic'
    ),
    locations = cells_body(columns = c(is_paid,level,subject))
  ) %>% 
  tab_style(
    style=cell_borders(sides = "r", color = "gray50", weight = px(2)),
    locations = list(
      cells_body(columns = course_title),
      cells_column_labels(columns = course_title)
      )
  )
```

Dane zawierają *3678* obserwacji podzielonych na *10* zmiennych.

### Zmienne

-   `course_title` - Tytuł kursu.

-   `is_paid` - Informuje o tym, czy dany kurs jest płatny.

-   `price` - Ukazuje cenę kursu wyrażoną w dolarach.

-   `num_subscribers` - Ukazuje liczbę subskrybentów kursu.

-   `num_reviews` - Ukazuje liczbę recenzji kursu.

-   `num_lectures` - Ukazuje liczbę wykładów kursu.

-   `level` - Przedstawia poziom trudności kursu podzielną na cztery kategorie:

    -   *`Beginner Level`* - poziom początkujący.

    -   *`Intermediate Level`* - poziom średniozaawansowany.

    -   *`Expert Level`* - poziom zaawansowany.

    -   *`All levels`* - wszystkie poziomy.

-   `content_duration` - Ukazuje długość kursu wyrażoną w godzinach.

-   `published_timestamp` - Przedstawia datę publikacji kursu o następującej strukturze: *rok-miesiąc-dzień T - godzina:minuta:sekunda Z*

-   `subject` - Przedstawia temat kursu wyrażonego w czterech różnych kategoriach:

    -   *`Business Finance`* - finanse

    -   *`Graphic Design`* -projekt graficzny.

    -   *`Musical Instruments`* - muzyczne instrumenty.

    -   *`Web Development`* - tworzenie stron internetowych.

### Cele badawcze

1.  **Analiza Trendów Rozwojowych Platformy Udemy**: Celem jest przeprowadzenie szczegółowej analizy historycznych danych, aby zidentyfikować trendy w rozwoju platformy, w tym wzrost liczby użytkowników, ceny kursów oraz ich rozkład tematyczny. Szczególny nacisk zostanie położony na wizualizację danych, umożliwiającą łatwe zrozumienie zmian zachodzących w czasie
2.  **Badanie Korelacji i Zależności między Zmiennymi Charakteryzującymi Kursy**: Przedmiotem analizy będą wzajemne zależności między różnymi atrybutami kursów, takimi jak cena, liczba uczestników, recenzji oraz długość kursów. Celem jest zrozumienie, jak te czynniki wzajemnie na siebie wpływają i w jakim stopniu mogą determinować popularność kursu.
3.  **Modelowanie Prognozujące Rozwój Nowych Kursów**: Celem jest zbudowanie modeli statystycznych i predykcyjnych, które pozwolą ocenić potencjalną popularność i sukces nowo wprowadzanych kursów na platformie. Modele będą oparte na analizie historycznych danych o kursach i ich wynikach, a także mogą uwzględniać zewnętrzne wskaźniki rynkowe i trendy edukacyjne.

### Czyszczenie i przygotowanie danych

```{r results='hide'}
length(data[is.na(data)])
```

Analiza w poszukiwaniu brakujących wartości wykazała, że w badanym zbiorze danych nie występują luki informacyjne. Kolejnym etapem było zbadanie zbioru pod kątem występowania powtarzających się wierszy. Stwierdzono obecność 6 duplikatów, które zostały usunięte w celu zapewnienia większej precyzji i wiarygodności przyszłych analiz.

```{r}
powtarzajace = data[duplicated(data),]
liczba = nrow(powtarzajace)
```

```{r}
df <- data %>% distinct()
```

```{r}
df$level <- factor(df$level, levels = names(sort(table(df$level), decreasing = TRUE)))  # zamiana chr na posortowany factor
df$is_paid = factor(df$is_paid)  # zamiana chr na factor
df$subject = factor(df$subject)
df$published_timestamp = substr(df$published_timestamp, 1, 10) # skrócenie daty do miesiąca i roku
df$published_timestamp =ymd(df$published_timestamp)  # zamiana daty
df$year <- as.factor(year(df$published_timestamp))
```

W celu usprawnienia procesu przetwarzania i analizy danych, podjęto decyzję o dokonaniu istotnych zmian w strukturze danych. Atrybuty `level`, `is_paid` oraz `subject` zostały przekonwertowane na zmienne typu factor, co pozwoli na bardziej efektywne wykorzystanie pamięci i przyspieszenie analiz. Dodatkowo, zmienna `published_timestamp` została dostosowana poprzez ograniczenie jej zawartości do roku, miesiąca i dnia, a następnie przekształcenie w format daty. Te zmiany mają kluczowe znaczenie dla zwiększenia wydajności przyszłych analiz danych.

### Analiza eksploracyjna

Podstawowe statystyki

```{r}
df %>% 
  select(where(is.numeric)) %>% 
  get_summary_stats(show=c('min','q1','median','mean','q3','max')) %>% 
  select(-n) %>% 
  gt() %>% 
  tab_style(
    style = cell_text(
      weight = 'bold',
      transform = 'uppercase'
    ),
    locations = cells_column_labels()
  ) %>% 
  tab_style(
    style = cell_text(
      weight = 'bold',
      style = 'italic'
    ),
    locations = cells_body(columns = variable)
  ) %>% 
  tab_style(
    style=cell_borders(sides = "r", color = "gray50", weight = px(2)),
    locations = list(
      cells_body(columns = variable),
      cells_column_labels(columns = variable)
      )
    )
```

Dane z Udemy ukazują znaczną różnorodność w zakresie cen, popularności, recenzji, zawartości oraz czasu trwania kursów. Średnia cena kursu wynosi 66.05 USD, z kursami wahającymi się od darmowych do 200 USD. Liczba subskrybentów waha się od 0 do prawie 269,000, przy czym mediana wynosi 911,5, wskazując na dużą różnicę w popularności kursów. Średnia liczba recenzji to 156,3, co pokazuje, że kursy są oceniane, ale z dużymi różnicami. Kursy różnią się liczbą wykładów, z medianą 25, a czas trwania treści waha się od 0 do 78,5 godziny. Ogólnie, statystyki te wskazują na szeroką gamę kursów dostępnych na Udemy, z różnorodnymi cenami i zawartościami, które przyciągają różne grupy demograficzne, przy czym niektóre kursy osiągają wyjątkowo wysoką popularność. <!-- Na podstawie podanych statystyk, możemy wywnioskować kilka rzeczy o kursach zawartych w zbiorze danych:

Różnorodność cen: Kursy na Udemy mają szeroki zakres cen, od darmowych (0 USD) do 200 USD. Średnia cena wynosi 66.05 USD, co wskazuje, że chociaż są kursy droższe, wiele z nich ma umiarkowaną cenę.

Popularność kursów: Liczba subskrybentów kursów jest bardzo zróżnicowana, z minimum 0 (co może oznaczać nowe kursy lub takie, które nie zyskały jeszcze popularności) do maksymalnej liczby subskrybentów wynoszącej 268,923. Mediana liczby subskrybentów wynosi 911,5, co oznacza, że połowa kursów ma mniej niż 912 subskrybentów, a połowa więcej. Średnia liczba subskrybentów jest znacznie wyższa (3197,2), co jest pociągnięte w górę przez kursy o wyjątkowo wysokiej liczbie subskrybentów.

Aktywność recenzentów: Liczba recenzji również się waha, z minimum 0 do maksimum 27,445. Średnia liczba recenzji wynosi 156,3, co wskazuje, że kursy są oceniane przez uczniów, ale istnieje znacząca różnica między najbardziej a najmniej ocenianymi kursami.

Zawartość kursu: Liczba wykładów waha się od 0 do 779, z medianą 25 i średnią 40,11. To sugeruje, że większość kursów ma dość ograniczoną liczbę wykładów, ale niektóre kursy oferują znacznie więcej materiału.

Poziom trudności: Poziom trudności kursów jest reprezentowany jako zmienna kategorialna, ale nie mamy tutaj danych dotyczących rozkładu tych kategorii.

Czas trwania treści: Czas trwania treści kursów ma szeroki zakres od 0 do 78,5 godzin, z medianą wynoszącą 2 godziny i średnią 4,095 godziny. To wskazuje, że większość kursów ma krótkie treści, ale są kursy, które są znacznie dłuższe.

Ogólnie, te statystyki wskazują na dużą różnorodność kursów dostępnych na Udemy, zarówno pod względem ceny, zawartości, jak i popularności. Możemy również wywnioskować, że kursy są w różnych przedziałach cenowych, co czyni je dostępnymi dla różnych grup demograficznych, a także pokazuje, że niektóre kursy są wyjątkowo popularne, co może wskazywać na wysoką jakość lub skuteczne marketingowe wsparcie. -->

## Wizualizacja danych

```{r}
ggplot(df, aes(x=year, fill= is_paid)) +
  geom_bar() +
  theme_minimal() +
  labs(title="Liczba kursów opublikowanych każdego roku", x="Rok", y="Liczba kursów")

```

Ogólna liczba kursów rośnie z roku na rok, co wskazuje na wzrost popularności i/lub dostępności kursów online. Kursy płatne stanowią większość wszystkich opublikowanych kursów w każdym roku, co sugeruje, że istnieje stały popyt na kursy premium, które prawdopodobnie oferują bardziej zaawansowaną lub specjalistyczną wiedzę.
W 2012 roku liczba kursów darmowych była znacznie niższa w porównaniu do płatnych, co może wskazywać, że na początku obserwowanego okresu większość dostawców treści preferowała tworzenie kursów płatnych.
W 2014 roku nastąpił znaczący wzrost liczby kursów, zarówno płatnych, jak i darmowych, co może oznaczać rosnące zainteresowanie edukacją online i/lub zwiększenie się liczby dostawców kursów.

Wizualizacja rozkładu ceny kursów

```{r}
y = year(df$published_timestamp)
cbind(df,y) %>% 
  group_by(y, is_paid) %>%
  summarize(Average_subs= mean(num_subscribers)) %>%
  ggplot(aes(x=as.numeric(y), y=Average_subs, color=is_paid)) +
  geom_line() +
  theme_minimal() +
  labs(title="Średnia liczba subskrybentów w ciągu lat (płatne/niepłatne)", x="Rok dodania kursu", y="Średnia liczba subskrybentów")
```

Wykres wskazuje na wyższą średnią liczbę subskrybentów kursów płatnych w porównaniu z darmowymi. Obserwuje się spadek popularności obu rodzajów kursów w czasie, z ostrzejszym trendem spadkowym dla darmowych kursów. Kursy płatne wydają się utrzymywać bardziej stabilną liczbę subskrybentów na przestrzeni lat. <!-- Popularność Kursów Płatnych vs Darmowych: Średnia liczba subskrybentów dla kursów płatnych wydaje się być znacznie wyższa niż dla kursów darmowych. Jest to wskazane przez krzywą oznaczoną kolorem czerwonym (dla kursów płatnych) leżącą wyżej na wykresie niż krzywa niebieska (dla kursów darmowych).

Trend w Czasie: Dla obu typów kursów (płatnych i darmowych) obserwujemy spadek średniej liczby subskrybentów w miarę upływu czasu od daty dodania kursu. To może wskazywać na to, że nowsze kursy mają tendencję do przyciągania mniejszej liczby subskrybentów w porównaniu do kursów starszych, lub też, że kursy z czasem tracą na popularności.

Różnice w Trendach: Spadek popularności wydaje się być bardziej stromy dla kursów płatnych niż dla darmowych. Może to sugerować, że kursy płatne szybciej tracą subskrybentów w czasie, co może wynikać z różnych czynników, takich jak konkurencja, zmieniające się trendy w edukacji online lub satysfakcja użytkowników.

Stabilność Kursów Darmowych: Krzywa dla kursów darmowych wydaje się być bardziej płaska w porównaniu z krzywą dla kursów płatnych, co może wskazywać na większą stabilność w zainteresowaniu tego typu kursami w dłuższym okresie czasu.

Analiza Wartości Szczególnych: Warto zwrócić uwagę na konkretne punkty wykresu, takie jak gwałtowny spadek dla kursów płatnych w okolicach 4 lat od daty dodania. Może to wskazywać na pewne zdarzenie lub zmianę na rynku, która miała duży wpływ na subskrypcje.
 -->

```{r}
library(gridExtra) 

colors <- c("All Levels" = "#6BAED6",  
            "Intermediate Level" = "#FD8D3C",  
            "Beginner Level" = "#74C476",  
            "Expert Level" = "#9E9AC8")  

p1 <- ggplot(df, aes(x = level, fill = level)) +
  geom_bar() +
  labs(title = "Rozkład poziomu kursów", x = "Poziom", y = "Liczba kursów") +
  theme_minimal() +
  theme(legend.position = "none") +
  scale_fill_manual(values = colors) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

df$price_range <- cut(df$price, 
                      breaks = seq(0, 200, by = 20),
                      labels = c("0-20", "21-40", "41-60", "61-80", "81-100", 
                                 "101-120", "121-140", "141-160", "161-180", "181-200"),
                      include.lowest = TRUE, right = FALSE)

p2 <- ggplot(df, aes(x = price_range, fill = level)) +
  geom_bar() +
  labs(title = "Rozkład cen kursów", x = "Przedział cenowy", y = "Liczba kursów") +
  theme_minimal() +
  scale_fill_manual(values = colors) +
  theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))

grid.arrange(p2, p1, ncol = 2) 
```

Analiza wykresu sugeruje kilka kluczowych trendów w dostępności i cenach kursów. Największa liczba kursów jest dostępna w przedziale cenowym (21-60), głównie na poziomie początkującym i dla wszystkich, co może świadczyć o dużej liczbie osób szukających niedrogich kursów na początek nauki. Kursy na poziomie zaawansowanym (Expert Level) są znacznie rzadsze we wszystkich przedziałach cenowych, co wskazuje na ich specjalistyczny charakter i mniejszą dostępność. W przedziałach cenowych średnich (61-180) obserwuje się równomierną dystrybucję kursów na poziomie początkującym i średnio zaawansowanym. W najwyższym przedziale cenowym (181-200) kursy dla początkujących stanowią mniejszość, co sugeruje, że rzadko są one oferowane po wysokich cenach. Ogólnie rzecz biorąc, dostępność kursów maleje wraz ze wzrostem cen, a większość kursów oferowana jest na poziomie początkującym w najniższym przedziale cenowym. Ponadto, dominacja kursów ogólnych (All Levels) wskazuje na preferencję twórców kursów do tworzenia materiałów dostosowanych do szerokiej publiczności, podczas gdy znacznie mniejsza liczba kursów dla zaawansowanych pokazuje potencjalne nisze rynkowe do rozwoju.

```{=html}
<!-- Największa liczba kursów jest dostępna w najniższym przedziale cenowym (0-20), co sugeruje, że kursy na poziomie początkującym są najbardziej dostępne cenowo lub że organizatorzy kursów preferują oferować kursy wstępne po niższych cenach, aby przyciągnąć więcej uczestników.

W przedziale cenowym 0-20, największą część stanowią kursy na poziomie początkującym, co może wskazywać na to, że istnieje duża liczba osób rozpoczynających naukę, które szukają tańszych kursów, aby zacząć.

Liczba kursów na poziomie zaawansowanym (Expert Level) jest znacznie mniejsza we wszystkich przedziałach cenowych. Może to sugerować, że takie kursy są rzadsze i prawdopodobnie bardziej wyspecjalizowane, co jest typowe dla ofert edukacyjnych na wyższym poziomie zaawansowania.

W przedziałach cenowych od 21 do 160, liczba kursów na poziomie początkującym i średnio zaawansowanym (Intermediate Level) jest podobna, co może wskazywać na równomierną dystrybucję tych poziomów zaawansowania w średnim zakresie cenowym.

W najwyższym przedziale cenowym (181-200), kursy na poziomie początkującym stanowią znaczącą mniejszość, co sugeruje, że kursy dla początkujących są rzadko oferowane po wysokich cenach, być może ze względu na mniejszą skłonność tej grupy do inwestowania w droższe kursy.

Można zauważyć, że w miarę wzrostu przedziału cenowego, ogólna liczba dostępnych kursów maleje. To wskazuje, że istnieje zdecydowanie więcej kursów tańszych niż droższych, co jest typowym modelem w wielu branżach edukacyjnych.

Ogólnie rzecz biorąc, wykres sugeruje, że dostępność kursów maleje wraz ze wzrostem cen, a największa liczba kursów jest oferowana na poziomie początkującym w najniższym przedziale cenowym.

Dominacja Kursów Ogólnych: Największa liczba kursów jest przeznaczona dla uczniów na wszystkich poziomach zaawansowania (All Levels). To wskazuje, że twórcy kursów preferują tworzyć materiały, które są dostosowane do szerokiej publiczności, co może być strategią mającą na celu maksymalizację potencjalnego zasięgu i zainteresowania.

Kursy dla Początkujących: Kursy przeznaczone dla początkujących (Beginner Level) stanowią drugą co do wielkości grupę, co może świadczyć o wysokim zapotrzebowaniu na materiały edukacyjne dla osób, które dopiero rozpoczynają naukę w danej dziedzinie.

Niewielka Liczba Kursów dla Zaawansowanych: Znacznie mniejsza liczba kursów jest przeznaczona dla uczniów na poziomie średnio zaawansowanym (Intermediate Level) i zaawansowanym (Expert Level). To może sugerować, że jest mniejszy popyt na specjalistyczne kursy lub że twórcy kursów mogą nie skupiać się na tworzeniu zaawansowanych materiałów edukacyjnych, być może z powodu większego wyzwania w tworzeniu treści na wyższym poziomie zaawansowania lub mniejszej grupy docelowej zdolnej do ich zrozumienia.

Podsumowując, wykres wskazuje na koncentrację oferty edukacyjnej na kursy ogólne i dla początkujących, przy ograniczonej ofercie dla uczących się na wyższych poziomach zaawansowania, co może wskazywać na potencjalne nisze rynkowe do rozwoju. -->
```
```{r}
df %>%
  group_by(subject) %>%
  summarise(count = n()) %>%
  ggplot(aes(x = reorder(subject, -count), y = count, fill = subject)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  labs(title = "Liczba kursów w każdej kategorii", x = "Kategoria", y = "Liczba kursów") +
  coord_flip() + 
  theme(legend.position = "none")

```

Wysoka liczba kursów w kategoriach "Finanse Biznesowe" i "Rozwój Stron Internetowych" może wskazywać na znaczny popyt na edukację w tych obszarach. Może to być związane z rosnącą potrzebą kompetencji w dziedzinie finansów i technologii, co jest istotne w obecnym krajobrazie ekonomicznym i zawodowym.Rozwój rynku pracy może preferować umiejętności związane z IT i biznesem, co tłumaczyłoby większą dostępność kursów w tych dziedzinach.

```{r}
data_subscribers <- df %>% 
  filter(num_subscribers < 10000) %>% 
  dplyr::select(num_subscribers) %>% 
  mutate(category = "Subscribers")

data_reviews <- df %>% 
  filter(num_reviews < 1000) %>% 
  dplyr::select(num_reviews) %>% 
  mutate(category = "Reviews")

# Połączenie danych
combined_data <- bind_rows(
  data_subscribers %>% rename(value = num_subscribers),
  data_reviews %>% rename(value = num_reviews)
)

# Tworzenie wykresu
ggplot(combined_data, aes(x = value, fill = category)) +
  geom_histogram(bins = 20, color = "black") +
  facet_grid(~category, scales = "free_x") +
  scale_fill_manual(values = c("Subscribers" = "green", "Reviews" = "orange")) +
  labs(title = "Histogramy liczby subskrybentów i recenzji", x = "Liczba", y = "Liczba kursów") +
  theme_minimal()
```

Analiza histogramów recenzji i subskrybentów wskazuje na silnie skośny rozkład w obu przypadkach, z dominacją kursów o niewielkiej liczbie recenzji oraz subskrybentów. Większość kursów ma mniej niż 250 recenzji i mniej niż 2500 subskrybentów, co może świadczyć o ich nowości lub ograniczonej popularności. Wysoka skośność w obu dystrybucjach wskazuje na obecność niewielkiej liczby kursów o wyjątkowo wysokiej liczbie recenzji i subskrybentów, co sugeruje zdominowanie rynku przez kilka bardzo popularnych kursów. Te dane mogą dostarczyć cennych wskazówek twórcom kursów na temat obecnego stanu rynku i możliwości rozwoju ich oferty. <!-- Rozkład Recenzji: Histogram recenzji (pomarańczowy) pokazuje, że większość kursów ma niewielką liczbę recenzji, z silnie skośnym rozkładem w kierunku mniejszej liczby recenzji. Istnieje duże skupisko kursów z mniej niż 250 recenzjami, co może wskazywać na to, że wiele kursów jest stosunkowo nowych lub mniej popularnych.

Rozkład Subskrybentów: Histogram subskrybentów (zielony) również pokazuje skośny rozkład, ale z nieco innym profilem niż histogram recenzji. Większość kursów ma mniej niż 2500 subskrybentów, z największym skupiskiem w okolicy poniżej 1000. To może sugerować, że kursy te są albo nowe, albo mają wąską grupę docelową.

Analiza Skośności: Obie dystrybucje wykazują wysoką skośność pozytywną, co oznacza, że mała liczba kursów ma wyjątkowo wysoką liczbę recenzji lub subskrybentów. To może wskazywać na istnienie niewielkiej grupy bardzo popularnych kursów.

Podsumowując, wykresy te mogą wskazywać na rynek zdominowany przez kilka bardzo popularnych kursów, z dużą liczbą kursów walczących o uwagę i subskrypcje. Dane te mogą być przydatne dla twórców kursów w celu zrozumienia dynamiki rynku i w identyfikacji potencjalnych obszarów do rozwoju ich oferty edukacyjnej. -->

```{r}
df %>% 
  ggplot(aes(x=price_range,y=sqrt(num_subscribers)))+
  geom_boxplot(fill='lightblue')+
  labs(title = 'Wykresy pudełkowe liczby subskrybcji', x= 'Przedział cenowy', y = 'Zpierwiastkowana liczba subskrybcji')+
  theme_minimal()
```

Wykres prezentuje rozrzut liczby subskrypcji dla różnych przedziałów cenowych. Wartość liczby subskrypcji została poddana pierwiastkowaniu w celu lepszej wizualizacji wykresu. W trakcie analizy należy pamiętać zatem, że wszelkie różnice na wykresie oryginalnym byłyby większe.

W przedziale cenowym 0-20 widoczne jest, że zarówno mediana jak i kwartyle znajdują się znacznie wyżej niż dla pozostałych kategorii. W kolejnym przedziale można zaobserwować drastyczny spadek wysokości rozrzutu, a następnie uwydatnia się trend wzrostowy. Sytuacja to może odzwierciedlać to, że najpopularniejszymi kursami są te darmowe, jednak gdy już użytkownik zdecydował się zapłacić za kurs to częściej wybiera droższy.

### Macierz korelacji

```{=html}
<!-- Najpierw przeprowadzę kodowanie danych, aby umożliwić ich analizę.

Kodowanie danych jakościowych (nazywane też kategoryzacją lub enkodowaniem) to proces przekształcania danych niemierzalnych ilościowo, takich jak tekst lub etykiety, w formę liczbową, którą można wykorzystać w analizie statystycznej i modelowaniu matematycznym.

W praktyce dane jakościowe, takie jak płeć (mężczyzna, kobieta), kolor (czerwony, zielony, niebieski) czy poziom edukacji (podstawowy, średni, wyższy), są transformowane do postaci liczbowej, aby umożliwić przeprowadzenie takich analiz jak regresja, klasyfikacja, czy analiza korelacji. -->
```
```{r}
dane_zakodowane = df %>% 
  dplyr::select(is_paid:price_range, -c(published_timestamp, price_range)) %>% 
  mutate_if(is.factor, as.numeric)

macierz_korelacji <- cor(dane_zakodowane, use = "complete.obs")
dane_do_wykresu = melt(macierz_korelacji)  
# Przed melt(): Macierz korelacji jest kwadratowa, z nazwami zmiennych zarówno w kolumnach, jak i wierszach. Wartości w komórkach macierzy reprezentują współczynniki korelacji między zmiennymi.

#Po melt(): Wynikowym formatem jest data frame, w którym każdy rząd reprezentuje parę zmiennych (jedna zmienna w kolumnie Var1, druga w Var2) wraz z odpowiadającą im wartością korelacji (w kolumnie value).

#Przykładowo, jeśli masz macierz korelacji z trzema zmiennymi A, B, C, to po zastosowaniu melt otrzymasz data frame z kolumnami Var1, Var2 i value, gdzie każdy rząd reprezentuje parę zmiennych (np. A-B, A-C, B-C) i ich korelację.
# Dostosowanie nazw zmiennych
dane_do_wykresu$Var1 <- factor(dane_do_wykresu$Var1, labels = names(dane_zakodowane))
dane_do_wykresu$Var2 <- factor(dane_do_wykresu$Var2, labels = names(dane_zakodowane))

# Tworzenie wykresu z wartościami korelacji
ggplot(dane_do_wykresu, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       midpoint = 0, limit = c(-1, 1), space = "Lab", 
                      name="Korelacja") +
  geom_text(aes(label = sprintf("%.2f", value)), color = "black", size = 3) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 8),
        axis.text.y = element_text(size = 8),
        axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  coord_fixed()
```

Analiza wykazała słabą negatywną korelację między płatnością kursu a liczbą subskrybentów, co sugeruje, że kursy darmowe mają tendencję do przyciągania większej liczby uczniów. Nie stwierdzono silnej korelacji między długością kursu a jego poziomem trudności. Istnieje natomiast silna korelacja między liczbą recenzji a liczbą subskrybentów, co wskazuje, że popularniejsze kursy otrzymują więcej recenzji. Znaczna korelacja została również zauważona między liczbą wykładów a czasem trwania treści kursu. Poziom trudności kursu nie wykazuje silnej korelacji z innymi zmiennymi, co może wskazywać, że jest ustalany niezależnie od innych aspektów kursu. Ogólnie, wyniki sugerują, że niektóre cechy kursów są ściśle powiązane, podczas gdy inne, takie jak poziom trudności, nie mają znaczącego wpływu na mierzone atrybuty. <!-- 1.  **Zależność Czy płatny a Liczba Subskrybentów**: Istnieje słaba negatywna korelacja między tym czy kurs jest płatny, a liczbą subskrybentów (-0.27). Może to oznaczać, że te kursy za które trzeba płacić mają tendencję do posiadania mniejszej liczby subskrybentów w porównaniu z kursami bezpłatnymi.

2.  **Brak Silnej Korelacji Między długością kursu a jego Poziomem**: Korelacja między **`level`** a **`content_duration`** jest bliska zeru (-0.06), co sugeruje brak związku między poziomem trudności kursu a jego długością.

3.  **Silna Korelacja między Liczbą Recenzji a Liczbą Subskrybentów**: Istnieje stosunkowo silna korelacja dodatnia (0.65) między liczbą recenzji a liczbą subskrybentów, co sugeruje, że kursy z większą liczbą subskrybentów mają tendencję do otrzymywania większej liczby recenzji.

4.  **Wysoka Korelacja między Liczbą Wykładów a Czasem Trwania Treści**: Wysoka korelacja (0.8) między **`num_lectures`** a **`content_duration`** wskazuje, że kursy z większą liczbą wykładów zazwyczaj mają dłuższą łączną długość treści.

5.  **Niska Korelacja Poziomu z Innymi Zmiennymi**: Poziom kursu ma stosunkowo niską korelację z innymi zmiennymi, co wskazuje, że nie jest ona głównym czynnikiem wpływającym na inne aspekty kursu, takie jak liczba subskrybentów czy liczba wykładów.

6.  **Małe Korelacje Czassu Publikacji, płatności kursu oraz poziomu**: Zmienne **`year`**, **`is_paid`** oraz `level`mają niskie wartości korelacji z innymi zmiennymi, co może sugerować, że czas publikacji, fakt, czy kurs jest płatny oraz jaki ma poziom nie mają silnego bezpośredniego wpływu na inne mierzone cechy kursów oraz wskazują, że nie jest one głównym czynnikiem wpływającym na inne aspekty kursu, takie jak liczba subskrybentów czy liczba wykładów.

Podsumowując, wykres korelacji sugeruje, że niektóre aspekty kursów online, takie jak liczba wykładów i długość treści, są ściśle powiązane, podczas gdy inne czynniki, takie jak poziom zaawansowania, nie mają wyraźnego wpływu na te mierzone atrybuty.

Istnieje silna dodatnia korelacja między liczbą lekcji a całkowitym czasem trwania kursu. To wskazuje, że zwiększona liczba lekcji jest zazwyczaj skorelowana z dłuższym czasem dostępu do treści kursu, co jest zgodne z oczekiwaniami, że bogatsza w treści oferta edukacyjna wymaga więcej czasu na jej przyswojenie.

Analiza wykazała również istotną dodatnią korelację między liczbą recenzji a liczbą subskrybentów. Jest to wskaźnik, że kursy o większej liczbie zapisanych uczestników generują proporcjonalnie większą liczbę recenzji. To zjawisko może świadczyć o większym zaangażowaniu użytkowników w kursy, które cieszą się większą popularnością.

Z analizy wynika, że poziom trudności kursu, określony przez autora, nie wykazuje korelacji z żadną inną mierzoną zmienną w zestawie danych. Może to sugerować, że stopień trudności kursu jest determinowany niezależnie od innych czynników, takich jak czas trwania kursu, liczba lekcji, czy popularność kursu wśród subskrybentów.

Ponadto, obserwacja negatywnej korelacji między statusem płatności kursu a liczbą subskrybentów może wskazywać na tendencję, że kursy oferowane bezpłatnie przyciągają większą liczbę uczestników. To zjawisko może podkreślać wpływ dostępności cenowej na decyzje o zapisaniu się na kurs przez potencjalnych uczestników.-->

### Miary asymetrii i koncentracji

```{r}
base::sapply(list(price=df$price,num_subscribers=df$num_subscribers,
                  num_reviews=df$num_reviews,num_lectures=df$num_lectures,
                  content_duration=df$content_duration),
             simplify = TRUE,
             FUN =  function(x){
             c(skewness = round(skewness(x),3),
               kurtosis = round(kurtosis(x,method = 'moment'),3))}
) %>% 
  as.data.frame() %>% 
  gt(rownames_to_stub = TRUE) %>% 
    tab_style(
    style=list(cell_borders(sides = c("r"), color = "gray50", weight = px(2))),
    locations=cells_stubhead()
    ) %>% 
  tab_options(
    column_labels.border.top.style = 'hidden'
  ) %>% 
  tab_style(
    style = cell_text(
      weight = 'bold',
      transform = 'uppercase'
    ),
    locations = cells_column_labels()
  ) %>% 
  tab_style(
    style = cell_text(
      weight = 'bold',
      style = 'italic'
    ),
    locations = cells_stub()
  )

```

Analiza miar asymetrii wykazała, że wszystkie zmienne mają rozkład asymetryczny o asymetrii prawostronnej. W analizowanych zbiorach dominują jednostki o wartościach niższych od średniej arytmetycznej. Wartość ta jest najmniejsza dla ceny (1.15) a największa dla liczby subskrypcji (11.60).

Analiza miar koncentracji wykazała że rozkład cen jest mezokurtyczny - jednostki koncentrują się tak jak w rozkładzie normalnym - natomiast rozkład pozostałych zmiennych jest leptokurtyczny - jednostki koncentrują się przy średniej arytmetycznej silniej niż w przypadku rozkładu normalnego. Miary osiągają wartość dwucyfrową dla długości kursu iliczny wykładów, oraz wartość trzycyfrową dla liczby subskrypcji i liczby recenzji.

Zatem na podstawie powyższych wyników możemy przypuszczać, że żadna ze zmiennych nie posiada rozkładu normalnego.

## Modelowanie danych

### Regresja liniowa

Zanim przystąpimy do zbudowania modelu liniowego należy wybrać dane do analizy. W przypadku zmiennej objaśnianej jest to zmienna `num_subscribers`. Natomiast w przypadku zmiennych objaśniających narzuca się to, że `contetn_duration` oraz `num_lectures` są ze sobą mocno skorelowane, zatem nie powinny być ze sobą w jednym modelu. Ciężko jest jednak stwierdzić, którą z nich należy umieścić. By temu zaradzić, a zarazem sprawdzić pozostałe zmienne skorzystamy z pomocy regresji krokowej.

```{r}
model_pusty <- lm(num_subscribers~-1,data = df)
model_pelny <- lm(num_subscribers~num_reviews+price+num_lectures+content_duration + level+subject+year+is_paid,data=df)

```

Selekcja w przód

```{r include=FALSE}
model1 <- step(model_pusty,scope = formula(model_pelny),direction = 'forward')
```

```{r}
model1$call
```

Eliminacja wsteczna

```{r include=FALSE}
model2 <- step(model_pelny,scope = formula(model_pelny),direction = 'backward')
```

```{r}
model2$call
```

Korzystając z dwóch kierunków regresji krokowej otrzymaliśmy modele różniące się tylko zwartością wyrazu wolnego. Przez funkcję odrzucone zostały zarówno zmienne `content_duration` jak i `num_lectures`.

Zatem model składa się ze zmiennej zależnej `num_subscribers` oraz zmiennych niezależnych: `num_reviews`, `price`, `subject`,`level`,`year` oraz `is_paid` .

#### Obserwacje nietypowe

Pozbędziemy się teraz obserwacji nietypowych.

```{r}
plot(model2,which = 4)
cooks.distance(model2)[which(cooks.distance(model2)>0.5)]
```

Na podstawie wyżej ukazanych wykresów oraz wartości odległości cook'a możemy stwierdzić, że w modelu znajdują się obserwacje nietypowe. Są to obserwacje numer 1,3,12oraz 16.

Jednak nie zamierzamy ich usuwać.

#### Interakcje

W naszym modelu liniowym znajdują się zmienne jakościowe, co może powodować wytworzeniem się interakcji między zmiennymi. Z uwagi na dużą liczbę możliwych obserwacji ograniczymy się jedynie do jednej. Przeanalizujmy zatem, czy istnieje interakcja pomiędzy zmienną ilościową `price` a zmienną jakościową `subject`.

Dzięki temu, że model bez interakcji jest zagnieżdżony w modelu z interakcją możemy wykorzystać do ich porównania Częściowy Test F.

```{r}
model3 <- lm(num_subscribers ~ num_reviews + price  + level + subject + year + is_paid + price:subject,data = df)
anova(model2,model3)
```

Na podstawie wyniku Częściowego Testu F - p.value \<0.05 - możemy stwierdzić, że model bardziej złożony jest lepszy od prostszego. Oznacza to, że w modelu występuje interakcja pomiędzy zmiennymi `pirce` oraz `subject`. Niewiadomo jednak dokładnie które poziomy posiadają interakcje. Przeanalizujemy to podczas analizy modelu.

#### Model

Ostatecznie otrzymujemy model:

```{r}
model <- lm(num_subscribers ~ num_reviews + price  + level + subject + year + is_paid + price:subject,data = df)
summary(model)
result2 <- c(RMSE(df$num_subscribers, predict(model)),
             summary(model)$r.squared,
MAE(df$num_subscribers, predict(model)))
```

Na podstawie otrzymanej statystyki testu F której p.value \<0.05 możemy stwierdzić, że model jest istotny statystycznie.

Rozrzut błędu nie jest równomierny zatem możemy przypuszczać, że rozkład modelu nie jest rozkładem normalnym.

Analiza:

-   `Intercept` jest istotny statystycznie, posiada współczynnik równy 22583.99. Interpretacja wyrazu wolnego nie ma jednak sensu, gdyż wychodziłoby, że bezpłatny kurs z 2011 bez żadnych recenzji o tematyce finansowej i przeznaczonej dla wszystkich osiąga ponad dwadzieścia tysięcy subskrypcji.

-   `num_reviews` jest istotny statystycznie, posiada współczynnik równy 6.05, zatem każda dodatkowa recenzja powoduje zwiększenie liczby subskrypcji średnio o 6.05, przy założeniu, że pozostałe zmienne będą takie same.

-   `pirce` jest istotny statystycznie, posiada współczynnik równy 12.44, zatem jeżeli kurs jest droższy o jednego dolara to statystycznie będzie mieć o średnio 12.44 więcej subskrypcji, przy założeniu, że pozostałe zmienne będą takie same.

-   `level`:

    -   `All Levels` jest poziomem bazowym

    -   Pozostałe poziomy nie są istotne statystycznie. Oznacza to że wszystkie poziomu trudności kursu są popularne na podobnym poziomie.

-   `subject`:

    -   `Business Finance` jest poziomem bazowym

    -   poziom `Web development` jest istotny statystycznie, jego współczynnik wynosi 3840.72, zatem kurs o temacie rozwoju stron średnio otrzyma o 3840.72 subskrypcji więcej niż kurs o biznesie, jeżeli pozostałe zmienne pozostaną takie same.

    -   pozostałe poziomy nie są istotne statystycznie. Zatem tematy nie różnią się od biznesu w kontekście popularności.

-   `year`:

    -   `2011` jest poziomem bazowym

    -   Wszystkie pozostałe poziomy są istotne statystycznie, posiadają ujemne współczynniki, oznacza to że kursy powstałe w 2011 były przeciętnie dużo popularniejsze od później powstałych.

-   `is_paid`:

    -   `False` jest poziomem bazowym

    -   poziom `True` jest istotny statystycznie, posada współczynnik równy -7618.18. Oznacza to, że statystycznie kursy darmowe uzyskują dużo więcej subskrypcji od płatnych.

-   Interakcje:

    -   Występuje interakcja pomiędzy zmienną `price` a poziomem `Web development`, posiada współczynnik równy -10.77, co oznacza że w przypadku kursów o tematyce rozwoju storn internetowych to tańsze kury były bardziej popularne.

Ocena dopasowanie modelu:

-   RMSE = 6502.53

-   R.squared = 0.53

-   MAE = 2624.01

#### Podstawowe założenia

Sprawdźmy podstawowe założenia modelu.

```{r warning=FALSE}
P_value <- c(resettest(model)$p.value,
raintest(model)$p.value,
bptest(model)$p.value,
dwtest(model)$p.value,
lillie.test(model$residuals)$p.value,
shapiro.test(model$residuals)$p.value,
cvm.test(model$residuals)$p.value,
ad.test(model$residuals)$p.value)

Test <- c('Reset', 'Rainbow', 'Breusch-Pagan', 'Durbin-Watson', 'Lillie', 'Shapiro-Wilk', 'Cramer-Von-Mises', 'Anderson-Darling')

Zalozenie <- c('Liniowość','Liniowość','Homoskedastyczność','Autokorelacja','Normalność','Normalność','Normalność','Normalność')

data.frame(Zalozenie,Test,P.wartość=P_value) %>% 
  group_by(Zalozenie) %>% 
  gt(groupname_col = 'Zalozenie') %>% 
    tab_style(
    style = cell_text(
      style = 'italic'
    ),
    locations = cells_body(columns = Test)) %>% 
    tab_style(
    style = cell_text(
      style = 'italic',
      weigh = 'bold'
    ),
    locations = cells_column_labels()) %>% 
      tab_style(
    style = cell_text(
      style = 'italic',
      weigh = 'bold',
      v_align = 'middle'
    ),
    locations = cells_row_groups()) %>% 
      tab_style(
    style=list(cell_borders(sides = c("r"), color = "gray50", weight = px(2))),
    locations=cells_stubhead()
    ) %>% 
  tab_options(
    column_labels.border.top.style = 'hidden',
    row_group.as_column = TRUE
  )
  
```

Żadne założenie nie zostało spełnione, zatem Twierdzenie Gaussa-Markowa nie jest spełnione.Model nie jest użyteczny, zatem poprzednio wypisane wnioski nie muszą odzwierciedlać stanu faktycznego.

### PCA

Spróbujemy zatem utworzyć model regresji liniowej przy pomocy metody analizy głównych składowych. Do stworzenia modelu nie możemy użyć zmiennych jakościowych, zatem ograniczamy się do zmiennych ilościowych. Wybieramy użyte już wcześniej `num_reviews` i `price` oraz jedną z dwóch skorelowanych zmiennych `num_lectures` lub `content_duration`. Decydujemy się na `num_lectures`

```{r echo=FALSE}
X <- df[,c(3,5,6)]
pr <- prcomp(X,scale=T)
```

```{r}
pr$rotation
```

Powstały model składa się z 3 składowych :

```{=tex}
\begin{align}

PC1 = 0.58 \cdot \text{price} + 0.48 \cdot \text{num\_reviews} + 0.66 \cdot \text{num\_lectures} \\\\

PC2 = -0.57 \cdot \text{price} + 0.82 \cdot \text{num\_reviews} - 0.09 \cdot \text{num\_lectures} \\\\

PC3 = -0.58 \cdot \text{price} - 0.32 \cdot \text{num\_reviews} + 0.75 \cdot \text{num\_lectures}

\end{align}
```
```{r}
pr %>% 
  summary()
```

-   `PC1` wyjaśnia około 49% zmienności.

-   `PC2` wyjaśnia około 30% zmienności, razem z `PC1` wyjaśniają około 79% zmienności.

-   `PC3` wyjaśnia około 21% zmienności, wraz z pozostałymi wyjaśniają 100% zmienności.

Wybierzmy teraz liczbę składowych głównych do modelu regresji.

```{r}
fviz_screeplot(pr)
```

Bazując na powyższym wykresie osypiska oraz powyżej podanych procentach wyjaśnienia zmienności modelu wybieramy wszystkie trzy składowe - próg wynosi 80% wyjaśnionej zmienności.

Przed budową modelu regresji sprawdźmy jeszcze, wkład w wyjaśnienie zmienności poszczególnych zmiennych.

```{r}
fviz_contrib(pr,choice = 'var',axes=1)
```

`PC1` najlepiej wyjaśniają zmienne: `num_lectures` oraz `price`

```{r}
fviz_contrib(pr,choice = 'var',axes=2)
```

`PC2` najlepiej wyjaśnia zmienna `num_reviews`

```{r}
fviz_contrib(pr,choice = 'var',axes=3)
```

`PC3` wyjaśniają najlepiej zmienne `num_lectures` oraz `price`.

#### Model regresji

Zbudujmy teraz model

```{r}
PC1 <- pr$x[,1]
PC2 <- pr$x[,2]
PC3 <- pr$x[,3]

model <- lm(df$`num_subscribers`~PC1+PC2+PC3)

summary(model)

result3 <- c(RMSE(df$num_subscribers, predict(model)),
             summary(model)$r.squared,
MAE(df$num_subscribers, predict(model)))

result3
```

Na podstawie otrzymanej statystyki testu F której p.value \<0.05 możemy stwierdzić, że model jest istotny statystycznie.

Wszystkie współczynniki są statystycznie istotne.

Jednak bazując na ocenach modelu

-   RMSE - 7196.76

-   R.squared - 0.42

-   MAE - 2823.81

Możemy zauważyć, że model jest jeszcze gorszy od poprzedniego.

Na to miał pewnie wpływ brak zmiennych jakościowych. Dostarczały one wiele istotnych informacji do modelu. W szczególności brak zmiennej `is_paid` mógł mieć duży wpływ na zmienną `price`. Bez informacji o darmowości kursu `price` jest zaburzana przez ogromną różnice w popularności płatnych i bezpłatnych kursów. Dodanie zmiennej `num_lectures` nie wynagrodziło tych braków.

### Drzewo decyzyjne

Drzewo decyzyjne to narzędzie stosowane w uczeniu maszynowym do modelowania przewidywań i decyzji. Składa się z węzłów reprezentujących pytania lub decyzje, oraz z gałęzi, które prowadzą do odpowiedzi lub kolejnych pytań. Proces ten kończy się na liściach drzewa, które przedstawiają ostateczne przewidywania lub decyzje. Drzewa decyzyjne są używane do klasyfikacji lub regresji i charakteryzują się prostotą interpretacji.

Do modelu drzewa decyzyjnego wybieram zmienne **`price`**, **`num_reviews`**, **`num_lectures`**, **`level`**, **`content_duration`**, **`published_timestamp`** oraz **`subject`**.

Do predykcji podzieliliśmy zbiór danych na zbiór treningowy i testowy w proporcjach 80:20

Użyliśmy set.seed aby mieć powtarzalność wyników i wniosków

```{r}
set.seed(2024)
library(rpart)
library(rpart.plot)
data_tree = df[,c(3,4,5,6,8,9, 7, 10)]
#data_tree = cbind(data_tree, dane_zakodowane[,c(6,8)])
split = createDataPartition(data_tree$num_subscribers, p = .8, list = F, times = 1)  # podział danych 
data_train = data_tree[split,]
data_test = data_tree[-split,]

fit <- rpart(num_subscribers ~ ., data = data_train, method = "anova", cp = 0.0001, maxdepth = 4, minbucket =4)  # dla regresji, bo num_subsrtibers jest zmienną ilościową, cp - im mniej tym bardziej skomplikowane drzewo

prp(fit, 
    type = 0, 
    under = TRUE, 
    cex = 0.6, 
    main = "Drzewo Decyzyjne")

# prognozowanie danych testowych
pred = predict(fit, data_test)
result = postResample(pred = pred, obs = data_test$num_subscribers)

result_df <- data.frame(t(result))
colnames(result_df) <- c("RMSE", "Rsquared", "MAE")
gt_table <- gt(result_df)
gt_table
```

### Las losowy

Las losowy, znany również jako Random Forest, to zaawansowana metoda uczenia maszynowego oparta na agregacji wielu drzew decyzyjnych do generowania bardziej precyzyjnych i stabilnych prognoz. Jest to przykład tzw. techniki "ensemble learning", gdzie wielokrotne modele (w tym przypadku drzewa decyzyjne) są łączone w celu uzyskania lepszych wyników niż każdy z modeli oddzielnie.

1.  **Tworzenie wielu drzew decyzyjnych**: Las losowy składa się z dużej liczby drzew decyzyjnych. Każde drzewo jest trenowane na nieco innej próbce danych, często wybieranej metodą bootstrap (losowy wybór z powtórzeniami).

2.  **Różnorodność**: Każde drzewo w lesie losowym jest budowane z wykorzystaniem losowego podzbioru cech, co zwiększa różnorodność w modelu i pomaga w redukcji nadmiernego dopasowania (ang. overfitting).

3.  **Wysoka dokładność i stabilność**: Dzięki agregacji wyników z wielu modeli, lasy losowe często osiągają wysoką dokładność i są odporne na nadmierne dopasowanie, co czyni je skutecznymi w szerokim zakresie zastosowań.

4.  **Uniwersalność**: Lasy losowe mogą być stosowane zarówno do problemów klasyfikacji, jak i regresji, a także do innych zadań, takich jak klasyfikacja wieloklasowa, detekcja anomalii i inne.

```{=html}
<!-- Kluczowe aspekty lasu losowego:

1.  **Tworzenie wielu drzew decyzyjnych**: Las losowy składa się z dużej liczby drzew decyzyjnych. Każde drzewo jest trenowane na nieco innej próbce danych, często wybieranej metodą bootstrap (losowy wybór z powtórzeniami).

2.  **Różnorodność**: Każde drzewo w lesie losowym jest budowane z wykorzystaniem losowego podzbioru cech, co zwiększa różnorodność w modelu i pomaga w redukcji nadmiernego dopasowania (ang. overfitting).

3.  **Agregacja prognoz**: Prognozy z poszczególnych drzew są agregowane, najczęściej poprzez głosowanie dla klasyfikacji lub uśrednianie dla regresji, w celu uzyskania końcowego wyniku.

4.  **Wysoka dokładność i stabilność**: Dzięki agregacji wyników z wielu modeli, lasy losowe często osiągają wysoką dokładność i są odporne na nadmierne dopasowanie, co czyni je skutecznymi w szerokim zakresie zastosowań.

5.  **Uniwersalność**: Lasy losowe mogą być stosowane zarówno do problemów klasyfikacji, jak i regresji, a także do innych zadań, takich jak klasyfikacja wieloklasowa, detekcja anomalii i inne.

Las losowy jest ceniony w praktycznych zastosowaniach za swoją wydajność i dobrą generalizację, co sprawia, że jest popularnym wyborem w wielu problemach uczenia maszynowego. -->
```
```{r}
library(randomForest)
set.seed(2024)  # używamy seed dla powtarzalności wyników
las = df[,c(3,4,5,6,8,9, 7, 10)]

# używamy tej komendy, gdy mamy jakieś braki danych, las losowy uzupełnia te braki, co jest pomocne w późniejszej analizie
# rfImpute(num_subscribers ~ ., df = df, iter = 6)  # przewidujemy liczbę subskrybentów, budujemy 6 lasów losowych
# u nas nie ma braków danych, więc jej nie używamy

# dzielenie danych na zbiór treningowy i testowy
split = createDataPartition(las$num_subscribers, p = .8, list = F, times = 1)  # podział danych 
data_train = las[split,]
data_test = las[-split,]

model = randomForest(num_subscribers ~ ., data = data_train, proximity=  T)

# ocena modelu
predi = predict(model, data_test)
result1 = postResample(pred = predi, obs = data_test$num_subscribers)
varImpPlot(model) # wyższa wartość wskazuje wyższą ważność zmiennej w modelu, level ma małą w porównaniu do innych więc można ją wyżucić z modelu

result_df <- data.frame(t(result1))
colnames(result_df) <- c("RMSE", "Rsquared", "MAE")
gt_table <- gt(result_df)
gt_table
# można jeszcze dodać wykresy błędów, ale nie wiem czy jest sens, kiedyś sprawdzę
```

### Porównanie modeli

```{r}
modele = rbind(result, result1,result2,result3)
row.names(modele) = c("Drzewo decyzyjne", "Las losowy",'Regresja liniowa','PCA')
modele_df <- as.data.frame(modele)

# Dodanie nazw wierszy jako kolumny
modele_df$Model <- row.names(modele_df)

# Ustawienie nazw wierszy jako pierwszej kolumny
modele_df <- modele_df[, c(ncol(modele_df), 1:(ncol(modele_df)-1))]

# Tworzenie tabeli z wykorzystaniem gt
gt(modele_df) %>%
  tab_style(
    style = cell_text(weight = 'bold', transform = 'uppercase'),
    locations = cells_column_labels()
  ) %>%
  tab_style(
    style = cell_text(weight = 'bold', style = 'italic'),
    locations = cells_body(columns = 2:ncol(modele_df))
  ) %>%
  tab_style(
    style = cell_borders(sides = "right", color = "gray50", weight = px(2)),
    locations = cells_body(columns = 1)  # Dodanie granicy po prawej stronie kolumny Model
  )
```

1.  **Las Losowy**:

    -   Najniższy RMSE (4081.392) oraz najwyższy R\^2 (0.6960786) wśród wszystkich modeli, co wskazuje na najlepszą ogólną wydajność.

    -   Ma również drugi najniższy MAE (1848.716), co sugeruje dobrą zdolność do minimalizowania średnich błędów w prognozach.

2.  **Drzewo Decyzyjne**:

    -   Drugi pod względem wydajności model z RMSE 5115.595 i R\^2 0.5640084.

    -   MAE (2179.520) jest wyższe niż w przypadku Lasu Losowego, co może wskazywać na większe błędy w prognozach pojedynczych przypadków.

3.  **Regresja Liniowa**:

    -   Trzeci pod względem wydajności, z RMSE 6502.528 i R\^2 0.5301884.

    -   MAE 2624.015 wskazuje na to, że średnie błędy w prognozach są większe niż w przypadku Drzewa Decyzyjnego i Lasu Losowego.

4.  **PCA** (analiza głównych składowych):

    -   Najgorszy wynik zarówno pod względem RMSE (7196.761) jak i R\^2 (0.4245157).

    -   Najwyższy MAE (2823.811), co sugeruje najmniej precyzyjne prognozy w porównaniu do pozostałych modeli.

Podsumowując, **Las Losowy** wydaje się być najlepszym modelem w tym zestawieniu, oferując najbardziej dokładne i spójne prognozy. **Drzewo Decyzyjne** i **Regresja Liniowa** prezentują średnią wydajność, podczas gdy model oparty na **PCA** wydaje się być najmniej skuteczny w tych konkretnych warunkach.

## Podsumowanie

Z czasem platforma Udemy stale się rozwija zyskując co roku znaczącą liczbę kursów.

Analiza rynku kursów online na platformie Udemy ukazała szeroki wachlarz cenowy - od darmowych po kursy kosztujące do 200 USD, z medianą subskrypcji na poziomie 911,5.

Trendy wskazują na wyższą popularność kursów bezpłatnych na starcie, ale spadek zainteresowania obu typów kursów z biegiem czasu. Większość kursów to te na poziomie początkującym, a kategorie biznesowe i technologiczne cieszą się dużym zainteresowaniem. Rozkład recenzji i subskrypcji jest skośny, z większością kursów mających mało recenzji i subskrypcji, co wskazuje na ich nowość lub niszową popularność. Silna korelacja między liczbą recenzji a subskrypcji sugeruje, że popularne kursy przyciągają większą uwagę.

Porównanie modeli prognostycznych dla liczby subskrybentów wykazało, że model Lasu Losowego ma najlepsze wskaźniki wydajności (najniższy RMSE i najwyższy R\^2), co czyni go najlepszym wyborem wśród rozważanych opcji. Drzewo Decyzyjne i Regresja Liniowa mają średnie wskaźniki, natomiast PCA pokazało się jako najmniej skuteczny model.

Wnioski z projektu wskazują na dynamiczny i różnorodny rynek kursów online, z pewnymi kursami osiągającymi znaczącą popularność, podczas gdy inne pozostają mniej znane.
